                       ======================
                       Plugfest Testing Suite
                       ======================

This document is the simple user guide of UEFI Plugfest Testing Suite. This
testing suite collect hardware information and do the following testing of UEFI
environment:

The plugfest-test.sh script support:
 - UEFI Secure Boot Function Lock Testing 
 - EFI Variable Filesystem Testing
 - MOK enroll with kernel module testing
 - MOK Revoke Testing

Manually:
 - SUSE CA in db and dbx (manually)

====================
Run plugfest-test.sh
====================

Please change path to plugfest-2013-test folder to run plgufest-test.sh. The
whole procedure of tesitng as following:

 - ./plugfest-test.sh	# Collect information and do the first stage testing
 - reboot		# Reboot system to enroll testing MOK
 - ./plugfest-test.sh	# Boot back to system, run script to check MOK enrolled
 - ./plugfest-test.sh --revoke-mok	# Testing revoke MOK
 - reboot		# Reboot system to revoke testing MOK from MOKlist
 - ./plugfest-test.sh --revoke-mok	# Boot back to system, check MOK revoked

The plgufest-test.sh script will collect all hardware information and testing
result to test-result/MANUFACTURER_PRODUCT_NAME_BIOS_VENDOR_BIOS_VERSION_DATE.
Please remember backup the result folder if you want run test suite on the same
machine in one day.

After run plgufest-test.sh one cycle means we done the following testing:
 - UEFI Secure Boot Function Lock Testing
   Testing SLE kernel function lock when secure boot enabled, lock functions
   including: setpci, s4, kdump, ioport
   
 - EFI Variable Filesystem Testing
   Run the efivarfs.sh script from kernel upstream to test the add/update/del
   of efivarfs. For the create_read testing will show up "Reading a new var
   should return EOF", it's a known issue for vanilla kernel has the same
   message.

 - MOK enroll with kernel module testing
   I prepared a testing kernel modules, name is moktest.ko, it sign by private
   key signing_key.priv and can verify by signing_key.x509 certificate. We will
   try to load the moktest.ko and guide to user for enroll MOK. After enroll
   MOK then we will try to load moktest.ko for make sure MOK works.
   This testing have 2 steps are separated by system reboot for run shim UI.

 - MOK Revoke Testing
   The revert path of MOK enroll, before do the next testing cycle, please
   remember run "./plugfest-test.sh --revoke-mok" first. As enroll process,
   this MOK revoke testing also have 2 steps that separated by system reboot to
   shim UI.

================================
SUSE CA in db and dbx (manually)
================================

This is a manually testing item need run by user to enroll SUSE CA to db/dbx
for test the trust of shim works with UEFI secure boot. The folder suse-ca/ has
following file:

 - BCA4E38E.crt
   This file is from shim RPM of SLE-11 SP3. Enroll this certificate to db
   should add shim-suse.efi to trusted by BIOS. The result as following:

   + Before Enroll to db
     DB:
     MicCorUEFCA2011_2011-06-27.crt
     MicWinProPCA2011_2011-10-19.crt

     multi-signed(SUSE, MS) shim of SLE-11 SP3	[BOOT SUCCESS]
     single-signed(MS) shim			[BOOT SUCCESS]
     single-signed(SUSE) shim			[Security Violation]

   + After Enroll to db
     DB:
     MicCorUEFCA2011_2011-06-27.crt
     MicWinProPCA2011_2011-10-19.crt
     SUSE-BCA4E38E.crt 

     multi-signed(SUSE, MS) shim of SLE-11 SP3	[BOOT SUCCESS]
     single-signed(MS) shim			[BOOT SUCCESS]
     single-signed(SUSE) shim			[BOOT SUCCESS]


   If enroll BCA4E38E.crt to dbx, we can see the shim.efi and shim-suse.efi
   blocked by secure boot because they are all signed by SUSE BCA4E38E:

   + After Enroll to dbx
     DB:
     MicCorUEFCA2011_2011-06-27.crt
     MicWinProPCA2011_2011-10-19.crt
     SUSE-BCA4E38E.crt 

     DBX:
     SUSE-BCA4E38E.crt 

     multi-signed(SUSE, MS) shim of SLE-11 SP3	[Security Violation]
     single-signed(MS) shim			[BOOT SUCCESS]
     single-signed(SUSE) shim			[Security Violation]

 - shim-suse.efi
   The this efi file is the shim loader that's only signed by SUSE CA. The
   default shim.efi in /boot/efi/efi/SuSE is multi-signed by SUSE and Microsoft
   CA. 
